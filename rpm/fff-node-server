#!/bin/bash
#
# fff-node-server        Startup script for the Node.js FFF monitor servlet
#
# chkconfig: - 81 19
# description: Node.js FFF monitor servlet
# processname: node
# pidfile: /var/run/fff-node-server.pid
#
### BEGIN INIT INFO
# Provides: fff-node-server
# Required-Start: $local_fs $remote_fs $network $named
# Required-Stop: $local_fs $remote_fs $network
# Short-Description: start and stop Node3.js FFF monitor servlet
# Description: Node.js FFF monitor servlet 
### END INIT INFO



#### BEGIN INIT INFO
## Provides:          node-service
## Required-Start:    $local_fs $remote_fs $network
## Required-Stop:     $local_fs $remote_fs $network
## Default-Start:     2 3 4 5
## Default-Stop:      0 1 6
## Short-Description: Start/stop node-service
#### END INIT INFO

. /etc/rc.d/init.d/functions

APPDIR=/opt/node/prod
PROCNAME="app.js"
NODE_PORT="80"
PIDFILE=/var/run/fff-node-server.pid

if [ -z "$2" ] then
  if [ $2 == "test" ] then
    APPDIR=/opt/node/test
    PROCNAME="app.js.test"
    NODE_PORT="4000"
    PIDFILE=/var/run/test-fff-node-server.pid
  fi
fi

NODE_WRAPPER=/opt/node/node-daemon.js
RUNUSER="es-cdaq-runtime"
NODE_ARGS="$NODE_PORT $RUNUSER"
#LOCKFILE=/var/lock/subsys/fff-node-server
RETVAL=0
STOP_TIMEOUT=${STOP_TIMEOUT-10}

do_start()
{
    # To allow many connections
    #ulimit -n 32767
    
    #daemon --pidfile=${PIDFILE} $NODE_WRAPPER $NODE_ARGS
    ${NODE_WRAPPER} start $APPDIR $NODE_PORT $RUNUSER $PROCNAME $PIDFILE
    #RETVAL=$?
    #echo
    #[ $RETVAL = 0 ] && touch ${lockfile}
    #return $RETVAL
}

do_stop()
{
    echo -n $"Stopping $NODE_WRAPPER: "
    killproc -p ${PIDFILE} -d ${STOP_TIMEOUT} $node
    ${NODE_WRAPPER} stop $APPDIR $NODE_PORT $RUNUSER $PROCNAME $PIDFILE
    #RETVAL=$?
    #echo
    #[ $RETVAL = 0 ] && rm -f ${lockfile} ${PIDFILE}
}


# See how we were called.
case "$1" in
  start)
	do_start
	;;
  stop)
	do_stop
	;;
  status)
        status -p ${PIDFILE} $PROCNAME
	RETVAL=$?
	;;
  restart)
	do_stop
	do_start
	;;
  condrestart|try-restart)
	if status -p ${PIDFILE} $PROCNAME >&/dev/null; then
		do_stop
		do_start
	fi
	;;
  *)
	echo $"Usage: $prog {start|stop|restart|condrestart|try-restart|status}"
	RETVAL=2
esac

exit $RETVAL
